apiVersion: v1
kind: Template
parameters:
- name: REGISTRY_IMG
  required: true
- name: CHANNEL
  required: true
- name: IMAGE_TAG
  required: true
- name: IMAGE_DIGEST
  required: true
- name: REPO_NAME
  value: custom-domains-operator
  required: true
metadata:
  name: selectorsyncset-template
objects:
- apiVersion: hive.openshift.io/v1
  kind: SelectorSyncSet
  metadata:
    labels:
      managed.openshift.io/gitHash: ${IMAGE_TAG}
      managed.openshift.io/gitRepoName: ${REPO_NAME}
      managed.openshift.io/osd: 'true'
    name: custom-domains-operator
  spec:
    clusterDeploymentSelector:
      matchLabels:
        api.openshift.com/managed: 'true'
      matchExpressions:
        - key: ext-managed.openshift.io/legacy-ingress-support
          operator: NotIn
          values: ["false"]
    resourceApplyMode: Sync
    resources:
    - kind: Namespace
      apiVersion: v1
      metadata:
        name: openshift-custom-domains-operator
        labels:
          openshift.io/cluster-monitoring: 'true'
          pod-security.kubernetes.io/enforce: 'baseline'
          pod-security.kubernetes.io/audit: 'baseline'
          pod-security.kubernetes.io/warn: 'baseline'
    - apiVersion: operators.coreos.com/v1alpha1
      kind: CatalogSource
      metadata:
        labels:
          opsrc-datastore: "true"
          opsrc-provider: redhat
        name: custom-domains-operator-registry
        namespace: openshift-custom-domains-operator
      spec:
        image: ${REGISTRY_IMG}@${IMAGE_DIGEST}
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: node-role.kubernetes.io/infra
                  operator: Exists
              weight: 1
        tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/infra
            operator: Exists
        displayName: Custom Domains Operator
        icon:
          base64data: ''
          mediatype: ''
        publisher: Red Hat
        sourceType: grpc
        grpcPodConfig:
          securityContextConfig: restricted
          nodeSelector:
            node-role.kubernetes.io: infra
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/infra
            operator: Exists
    - apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: custom-domains-operator
        namespace: openshift-custom-domains-operator
      spec:
        channel: ${CHANNEL}
        name: custom-domains-operator
        source: custom-domains-operator-registry
        sourceNamespace: openshift-custom-domains-operator
    - apiVersion: operators.coreos.com/v1alpha2
      kind: OperatorGroup
      metadata:
        name: custom-domains-operator
        namespace: openshift-custom-domains-operator
        annotations:
          olm.operatorframework.io/exclude-global-namespace-resolution: 'true'
      spec:
        targetNamespaces:
        - openshift-custom-domains-operator
- apiVersion: batch/v1
  kind: CronJob
  metadata:
    name: managed-ingress-feature-labeller
    namespace: openshift-sre-pruning
    annotations:
      kubernetes.io/description: 'Label clusters as legacy-ingress-support: false if label does not already exist'
  spec:
    schedule: "*/30 * * * *" # Every thirty minutes
    concurrencyPolicy: Replace
    jobTemplate:
      spec:
        backoffLimit: 0
        ttlSecondsAfterFinished: 3600
        template:
          metadata:
            name: ocpbugs-773
            namespace: openshift-sre-pruning
            annotations:
              kubernetes.io/description: Mitigate https://issues.redhat.com/browse/OCPBUGS-773 by checking podman version
          spec:
            affinity:
              nodeAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                - preference:
                    matchExpressions:
                    - key: node-role.kubernetes.io/infra
                      operator: Exists
                  weight: 1
            tolerations:
              - effect: NoSchedule
                key: node-role.kubernetes.io/infra
                operator: Exists
            containers:
            - name: ocpbugs-773
              image: image-registry.openshift-image-registry.svc:5000/openshift/tools:latest
              imagePullPolicy: Always
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              command:
              - /bin/bash
              args:
              - -c
              - |
                pods=$(oc get pod -n openshift-cluster-node-tuning-operator -l openshift-app=tuned -oname)
                # if label exists on cluster already, skip
                # if label does not exist, label it inside cluster namespace

                if [[ -z "${pods}" ]]; then
                  # no tuned pods found, this is fine
                  exit 0
                fi

                while IFS= read -r pod; do
                  echo $pod
                  oc exec -n openshift-cluster-node-tuning-operator $pod -c tuned -- chroot /host podman version
                done <<< "$pods"
            serviceAccountName: ocpbugs-773
            automountServiceAccountToken: true
            restartPolicy: Never
